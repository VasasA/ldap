<?php

/**
 * @file
 * Install, update and uninstall functions for the LDAP API module.
 */

/**
 * Implements hook_install().
 */
function ldap_query_install() {

}

/**
 * Implements hook_uninstall().
 */
function ldap_query_uninstall() {

}

/**
 * Implements hook_schema().
 */

/**
 * Implements hook_schema().
 */
function ldap_query_schema() {

  $schema['ldap_query'] = [
    'export' => [
      'key' => 'qid',
      'key name' => 'Query Name',
      'identifier' => 'qid',
      'primary key' => 'query_numeric_id',
      'api' => [
        'owner' => 'ldap_query',
        'api' => 'ldap_query',
        'minimum_version' => 1,
        'current_version' => 1,
      ],
    ],

    'description' => "LDAP Query Data leveraged by other LDAP Modules",
    'primary key' => ['query_numeric_id'],
    'foreign keys' => [
      'sid' => [
        'table' => 'ldap_servers',
        'columns' => ['sid' => 'sid'],
      ],
    ],
  ];
  module_load_include('module', 'ldap_servers');
  ldap_servers_module_load_include('php', 'ldap_query', 'LdapQuery.class');
  $fields = LdapQuery::fields();
  foreach ($fields as $field_id => $field) {
    if (isset($field['schema'])) {
      $schema['ldap_query']['fields'][$field_id] = $field['schema'];
    }
  }

  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function ldap_query_update_last_removed() {
  return 7102;
}

/**
 * Move settings of the LDAP queries from database to config
 */
function ldap_query_update_1000() {
  if (db_table_exists('ldap_query')) {
    $select = db_select('ldap_query')
      ->fields('ldap_query')
      ->execute()
      ->fetchAll();
    foreach($select as $values) {
      $config = config('ldap.query.' . $values->qid);
      $config->set('id', $values->qid);
      $config->set('name', $values->name);
      $config->set('config', $values);
      $config->save();
    }
    db_drop_table('ldap_query');
  }
}
