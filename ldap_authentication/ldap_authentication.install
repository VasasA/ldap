<?php

/**
 * @file
 * Install, update and uninstall functions for the LDAP authentication module.
 */

/**
 * Implements hook_requirements().
 */
function ldap_authentication_requirements($phase) {

  $requirements = [];
  if ($phase != "install" && db_table_exists('ldapauth')) {
    $requirements['ldap_authentication_ldap_integration']['title'] = t('LDAP Integration LDAP Auth Upgrade Concern');
    $requirements['ldap_authentication_ldap_integration']['severity'] = REQUIREMENT_WARNING;
    $requirements['ldap_authentication_ldap_integration']['value'] = NULL;
    $requirements['ldap_authentication_ldap_integration']['description'] = t('LDAP Authentication will need to be configured by hand.
      Some harmless data will remain in the user.data field in the user table. Records in
      the ldapauth table will cause conflicts and should be removed or changed to ldap_authentication
      as the module. See https://drupal.org/node/1023016, https://drupal.org/node/1183192.
      This message will go away when the ldapauth database table is removed.');
  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function ldap_authentication_install() {
}

/**
 * Implements hook_uninstall().
 */
function ldap_authentication_uninstall() {

}

/**
 * Implements hook_update_last_removed().
 */
function ldap_authentication_update_last_removed() {
  return 7100;
}

/**
 * Move ldap_authentication module settings from variables to config.
 */
function ldap_authentication_update_1000() {
  // Migrate variables to config.
  $config = config('ldap_authentication.settings');
  $config->set('ldap_authentication_conf', update_variable_get('ldap_authentication_conf', array()));
  $config->save();

  // Delete variables.
  update_variable_del('ldap_authentication_conf');
}
